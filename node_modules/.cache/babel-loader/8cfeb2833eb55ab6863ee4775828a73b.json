{"ast":null,"code":"var _jsxFileName = \"/home/danielwei/Development/GitProjects/modulus/src/components/SignUp/index.js\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport Recaptcha from \"react-recaptcha\";\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport * as ROLES from '../../constants/roles';\n\nconst SignUpPage = () => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"dialogwallpaper\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"largecontent\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 13\n  }\n}), /*#__PURE__*/React.createElement(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 19\n  }\n}), /*#__PURE__*/React.createElement(\"h1\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 25\n  }\n}, \"Sign Up\"), /*#__PURE__*/React.createElement(SignUpForm, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 13\n  }\n})));\n\nconst INITIAL_STATE = {\n  username: '',\n  email: '',\n  passwordOne: '',\n  passwordTwo: '',\n  isAdmin: false,\n  error: null,\n  isVerified: false\n};\n\nclass SignUpFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = event => {\n      const {\n        username,\n        email,\n        passwordOne,\n        isAdmin\n      } = this.state;\n      const roles = [];\n      const courses = [\"Welcome\"];\n      const wvarkclicks = [\"\"];\n      const vcourseprogress = [];\n      const tempCourse = [\"Item1\"];\n      vcourseprogress['TempCourse'] = tempCourse;\n\n      if (isAdmin) {\n        roles.push(ROLES.ADMIN);\n      } else {\n        roles.push(ROLES.USER);\n      }\n\n      this.props.firebase.doCreateUserWithEmailAndPassword(email, passwordOne).then(authUser => {\n        // Create a user in your Firebase realtime database\n        this.props.firebase.user(authUser.user.uid).set({\n          username,\n          email,\n          roles,\n          courses,\n          vcourseprogress,\n          wvarkclicks\n        }).then(() => {\n          this.setState({ ...INITIAL_STATE\n          });\n          this.props.history.push(ROUTES.HOME);\n        }).catch(error => {\n          this.setState({\n            error\n          });\n        });\n      }).catch(error => {\n        this.setState({\n          error\n        });\n      });\n      event.preventDefault();\n    };\n\n    this.onChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.onChangeCheckbox = event => {\n      this.setState({\n        [event.target.name]: event.target.checked\n      });\n    };\n\n    this.showPW = event => {\n      var x = document.getElementById(\"pw1\");\n      var y = document.getElementById(\"pw2\");\n\n      if (x.type === \"password\") {\n        x.type = \"text\";\n        y.type = \"text\";\n      } else {\n        x.type = \"password\";\n        y.type = \"password\";\n      }\n    };\n\n    this.recaptchaLoaded = this.recaptchaLoaded.bind(this);\n    this.verifyCallback = this.verifyCallback.bind(this);\n    this.state = { ...INITIAL_STATE\n    };\n  }\n\n  recaptchaLoaded() {\n    console.log(\"recaptcha has been loaded\");\n  }\n\n  verifyCallback(response) {\n    if (response) {\n      this.setState({\n        isVerified: true\n      });\n      console.log(\"here\");\n    }\n  }\n\n  render() {\n    const {\n      username,\n      email,\n      passwordOne,\n      passwordTwo,\n      isAdmin,\n      error,\n      isVerified\n    } = this.state;\n    const isValid = passwordOne === passwordTwo && passwordOne !== '' && email !== '' && username !== '' && isVerified;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      name: \"username\",\n      value: username,\n      onChange: this.onChange,\n      type: \"text\",\n      placeholder: \"Full Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"email\",\n      value: email,\n      onChange: this.onChange,\n      type: \"text\",\n      placeholder: \"Email Address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"passwordOne\",\n      id: \"pw1\",\n      value: passwordOne,\n      onChange: this.onChange,\n      type: \"password\",\n      placeholder: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"passwordTwo\",\n      id: \"pw2\",\n      value: passwordTwo,\n      onChange: this.onChange,\n      type: \"password\",\n      placeholder: \"Confirm Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }\n    }, \"Show Passwords\", /*#__PURE__*/React.createElement(\"input\", {\n      name: \"show pw\",\n      type: \"checkbox\",\n      onClick: this.showPW,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 29\n      }\n    }), \"Admin:\", /*#__PURE__*/React.createElement(\"input\", {\n      name: \"isAdmin\",\n      type: \"checkbox\",\n      checked: isAdmin,\n      onChange: this.onChangeCheckbox,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Recaptcha, {\n      sitekey: \"6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI\" //testing api key\n      //6Ldf_fEUAAAAANI2bc_UplaMu5rSyEADQCz1jdF0   is the actual API key for production\n      ,\n      render: \"explicit\",\n      onloadCallback: this.recaptchaLoaded,\n      verifyCallback: this.verifyCallback,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      disabled: !isValid,\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }\n    }, \"Sign Up\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 35\n      }\n    }), console.log(isValid), error && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 27\n      }\n    }, error.message));\n  }\n\n}\n\nconst SignUpLink = () => /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 5\n  }\n}, \"Don't have an account? \", /*#__PURE__*/React.createElement(Link, {\n  to: ROUTES.SIGN_UP,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 32\n  }\n}, \"Sign Up\"));\n\nconst SignUpForm = withRouter(withFirebase(SignUpFormBase));\nexport default SignUpPage;\nexport { SignUpForm, SignUpLink };","map":{"version":3,"sources":["/home/danielwei/Development/GitProjects/modulus/src/components/SignUp/index.js"],"names":["React","Component","Link","withRouter","Recaptcha","withFirebase","ROUTES","ROLES","SignUpPage","INITIAL_STATE","username","email","passwordOne","passwordTwo","isAdmin","error","isVerified","SignUpFormBase","constructor","props","onSubmit","event","state","roles","courses","wvarkclicks","vcourseprogress","tempCourse","push","ADMIN","USER","firebase","doCreateUserWithEmailAndPassword","then","authUser","user","uid","set","setState","history","HOME","catch","preventDefault","onChange","target","name","value","onChangeCheckbox","checked","showPW","x","document","getElementById","y","type","recaptchaLoaded","bind","verifyCallback","console","log","response","render","isValid","message","SignUpLink","SIGN_UP","SignUpForm"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport Recaptcha from \"react-recaptcha\";\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport * as ROLES from '../../constants/roles';\nconst SignUpPage = () => (\n    <div className=\"dialogwallpaper\">\n        <div className=\"largecontent\">\n            <br /><br /><h1>Sign Up</h1>\n            <SignUpForm />\n        </div>\n    </div>\n);\n\nconst INITIAL_STATE = {\n    username: '',\n    email: '',\n    passwordOne: '',\n    passwordTwo: '',\n    isAdmin: false,\n    error: null,\n    isVerified: false,\n};\n\nclass SignUpFormBase extends Component {\n    constructor(props) {\n        super(props);\n\n        this.recaptchaLoaded = this.recaptchaLoaded.bind(this);\n        this.verifyCallback = this.verifyCallback.bind(this);\n        this.state = { ...INITIAL_STATE };\n    }\n\n    onSubmit = event => {\n        const { username, email, passwordOne, isAdmin } = this.state;\n        const roles = [];\n        const courses = [\"Welcome\"];\n        const wvarkclicks = [\"\"];\n        const vcourseprogress = [];\n        const tempCourse = [\"Item1\"];\n        vcourseprogress['TempCourse'] = tempCourse;\n\n        if (isAdmin) {\n            roles.push(ROLES.ADMIN);\n        }else{\n            roles.push(ROLES.USER);\n        }\n\n        this.props.firebase\n            .doCreateUserWithEmailAndPassword(email, passwordOne)\n            .then(authUser => {\n                // Create a user in your Firebase realtime database\n                this.props.firebase\n                    .user(authUser.user.uid)\n                    .set({\n                        username,\n                        email,\n                        roles,\n                        courses,\n                        vcourseprogress,\n                        wvarkclicks,\n                    })\n                    .then(() => {\n                        this.setState({ ...INITIAL_STATE });\n                        this.props.history.push(ROUTES.HOME);\n                    })\n                    .catch(error => {\n                        this.setState({ error });\n                    });\n            })\n            .catch(error => {\n                this.setState({ error });\n            });\n\n        event.preventDefault();\n    };\n\n    onChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n    };\n\n    onChangeCheckbox = event => {\n        this.setState({ [event.target.name]: event.target.checked });\n    };\n\n    recaptchaLoaded() {\n        console.log(\"recaptcha has been loaded\");\n    }\n    verifyCallback(response) {\n        if(response) {\n            this.setState({\n                isVerified: true,\n            })\n            console.log(\"here\");\n        }\n    }\n    showPW = event => {\n        var x = document.getElementById(\"pw1\");\n        var y = document.getElementById(\"pw2\");\n        if (x.type === \"password\") {\n            x.type = \"text\";\n            y.type = \"text\";\n        } else {\n            x.type = \"password\";\n            y.type = \"password\";\n        }\n    }\n    render() {\n        const {\n            username,\n            email,\n            passwordOne,\n            passwordTwo,\n            isAdmin,\n            error,\n            isVerified,\n        } = this.state;\n\n        const isValid =\n            ((passwordOne === passwordTwo &&\n            passwordOne !== '' &&\n            email !== '' &&\n            username !== '') &&\n            isVerified);\n\n        return (\n            <form onSubmit={this.onSubmit}>\n                <input\n                    name=\"username\"\n                    value={username}\n                    onChange={this.onChange}\n                    type=\"text\"\n                    placeholder=\"Full Name\"\n                /><br /><br />\n                <input\n                    name=\"email\"\n                    value={email}\n                    onChange={this.onChange}\n                    type=\"text\"\n                    placeholder=\"Email Address\"\n                /><br /><br />\n                <input\n                    name=\"passwordOne\"\n                    id=\"pw1\"\n                    value={passwordOne}\n                    onChange={this.onChange}\n                    type=\"password\"\n                    placeholder=\"Password\"\n                /><br /><br />\n                <input\n                    name=\"passwordTwo\"\n                    id=\"pw2\"\n                    value={passwordTwo}\n                    onChange={this.onChange}\n                    type=\"password\"\n                    placeholder=\"Confirm Password\"\n                /><br /><br />\n                <label>\n                    Show Passwords\n                    <input\n                        name=\"show pw\"\n                        type=\"checkbox\"\n                        onClick={this.showPW}\n                    /><br /><br />\n                    Admin:\n                    <input\n                        name=\"isAdmin\"\n                        type=\"checkbox\"\n                        checked={isAdmin}\n                        onChange={this.onChangeCheckbox}\n                    />\n                </label><br /><br />\n                <center>\n                    <Recaptcha\n                        sitekey = \"6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI\" //testing api key\n                        //6Ldf_fEUAAAAANI2bc_UplaMu5rSyEADQCz1jdF0   is the actual API key for production\n                        render = \"explicit\"\n                        onloadCallback = {this.recaptchaLoaded}\n                        verifyCallback = {this.verifyCallback}\n                    />\n                </center>\n                <br /><br />\n                <button disabled={!isValid} type=\"submit\">\n                    Sign Up\n                </button>\n                <br /><br /><br /><br />\n                {console.log(isValid)}\n                {error && <p>{error.message}</p>}\n            </form>\n        );\n    }\n}\n\nconst SignUpLink = () => (\n    <p>\n        Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n    </p>\n);\n\nconst SignUpForm = withRouter(withFirebase(SignUpFormBase));\n\nexport default SignUpPage;\n\nexport { SignUpForm, SignUpLink };"]},"metadata":{},"sourceType":"module"}