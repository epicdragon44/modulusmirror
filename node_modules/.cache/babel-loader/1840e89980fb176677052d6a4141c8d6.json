{"ast":null,"code":"var _jsxFileName = \"/home/danielwei/Development/GitProjects/modulus/src/components/Admin/index.js\";\nimport React, { Component } from 'react';\nimport { Switch, Route, Link } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../Firebase';\nimport { withAuthorization } from '../Session';\nimport * as ROLES from '../../constants/roles';\nimport * as ROUTES from '../../constants/routes';\n\nconst AdminPage = () => /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"h1\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }\n}, \"Admin\"), /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }\n}, \"The Admin Page is accessible by every signed in admin user.\"), /*#__PURE__*/React.createElement(Switch, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(Route, {\n  exact: true,\n  path: ROUTES.ADMIN_DETAILS,\n  component: UserItem,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 13\n  }\n}), /*#__PURE__*/React.createElement(Route, {\n  exact: true,\n  path: ROUTES.ADMIN,\n  component: UserList,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 13\n  }\n})));\n\nclass UserListBase extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      users: []\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    this.props.firebase.users().on('value', snapshot => {\n      const usersObject = snapshot.val();\n      const usersList = Object.keys(usersObject).map(key => ({ ...usersObject[key],\n        uid: key\n      }));\n      this.setState({\n        users: usersList,\n        loading: false\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.users().off();\n  }\n\n  render() {\n    const {\n      users,\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, \"Users\"), loading && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 29\n      }\n    }, \"Loading ...\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, users.map(user => /*#__PURE__*/React.createElement(\"li\", {\n      key: user.uid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, \"ID:\"), \" \", user.uid), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, \"E-Mail:\"), \" \", user.email), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, \"Username:\"), \" \", user.username), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: {\n        pathname: `${ROUTES.ADMIN}/${user.uid}`,\n        state: {\n          user\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, \"Details\"))))));\n  }\n\n}\n\nclass UserItemBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSendPasswordResetEmail = () => {\n      this.props.firebase.doPasswordReset(this.state.user.email);\n    };\n\n    this.state = {\n      loading: false,\n      user: null,\n      ...props.location.state\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.user) {\n      return;\n    }\n\n    this.setState({\n      loading: true\n    });\n    this.props.firebase.user(this.props.match.params.id).on('value', snapshot => {\n      this.setState({\n        user: snapshot.val(),\n        loading: false\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.user(this.props.match.params.id).off();\n  }\n\n  render() {\n    const {\n      user,\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    }, \"User (\", this.props.match.params.id, \")\"), loading && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 29\n      }\n    }, \"Loading ...\"), user && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 15\n      }\n    }, \"ID:\"), \" \", user.uid), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 15\n      }\n    }, \"E-Mail:\"), \" \", user.email), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 15\n      }\n    }, \"Username:\"), \" \", user.username), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.onSendPasswordResetEmail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 15\n      }\n    }, \"Send Password Reset\"))));\n  }\n\n}\n\nconst UserList = withFirebase(UserListBase);\nconst UserItem = withFirebase(UserItemBase);\n\nconst condition = authUser => authUser && authUser.roles.includes(ROLES.ADMIN);\n\nexport default compose(withAuthorization(condition))(AdminPage);","map":{"version":3,"sources":["/home/danielwei/Development/GitProjects/modulus/src/components/Admin/index.js"],"names":["React","Component","Switch","Route","Link","compose","withFirebase","withAuthorization","ROLES","ROUTES","AdminPage","ADMIN_DETAILS","UserItem","ADMIN","UserList","UserListBase","constructor","props","state","loading","users","componentDidMount","setState","firebase","on","snapshot","usersObject","val","usersList","Object","keys","map","key","uid","componentWillUnmount","off","render","user","email","username","pathname","UserItemBase","onSendPasswordResetEmail","doPasswordReset","location","match","params","id","condition","authUser","roles","includes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Switch, Route, Link } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { withFirebase } from '../Firebase';\nimport { withAuthorization} from '../Session';\nimport * as ROLES from '../../constants/roles';\nimport * as ROUTES from '../../constants/routes';\n\nconst AdminPage = () => (\n    <div>\n        <h1>Admin</h1>\n        <p>The Admin Page is accessible by every signed in admin user.</p>\n\n        <Switch>\n            <Route exact path={ROUTES.ADMIN_DETAILS} component={UserItem} />\n            <Route exact path={ROUTES.ADMIN} component={UserList} />\n        </Switch>\n    </div>\n);\n\nclass UserListBase extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loading: false,\n            users: [],\n        };\n    }\n\n    componentDidMount() {\n        this.setState({ loading: true });\n\n        this.props.firebase.users().on('value', snapshot => {\n            const usersObject = snapshot.val();\n\n            const usersList = Object.keys(usersObject).map(key => ({\n                ...usersObject[key],\n                uid: key,\n            }));\n\n            this.setState({\n                users: usersList,\n                loading: false,\n            });\n        });\n    }\n\n    componentWillUnmount() {\n        this.props.firebase.users().off();\n    }\n\n    render() {\n        const { users, loading } = this.state;\n\n        return (\n            <div>\n                <h2>Users</h2>\n                {loading && <div>Loading ...</div>}\n                <ul>\n                    {users.map(user => (\n                        <li key={user.uid}>\n              <span>\n                <strong>ID:</strong> {user.uid}\n              </span>\n                            <span>\n                <strong>E-Mail:</strong> {user.email}\n              </span>\n                            <span>\n                <strong>Username:</strong> {user.username}\n              </span>\n                            <span>\n                <Link\n                    to={{\n                        pathname: `${ROUTES.ADMIN}/${user.uid}`,\n                        state: { user },\n                    }}\n                >\n                  Details\n                </Link>\n              </span>\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        );\n    }\n}\n\nclass UserItemBase extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loading: false,\n            user: null,\n            ...props.location.state,\n        };\n    }\n\n    componentDidMount() {\n        if (this.state.user) {\n            return;\n        }\n\n        this.setState({ loading: true });\n\n        this.props.firebase\n            .user(this.props.match.params.id)\n            .on('value', snapshot => {\n                this.setState({\n                    user: snapshot.val(),\n                    loading: false,\n                });\n            });\n    }\n\n    componentWillUnmount() {\n        this.props.firebase.user(this.props.match.params.id).off();\n    }\n\n    onSendPasswordResetEmail = () => {\n        this.props.firebase.doPasswordReset(this.state.user.email);\n    };\n\n    render() {\n        const { user, loading } = this.state;\n\n        return (\n            <div>\n                <h2>User ({this.props.match.params.id})</h2>\n                {loading && <div>Loading ...</div>}\n\n                {user && (\n                    <div>\n            <span>\n              <strong>ID:</strong> {user.uid}\n            </span>\n                        <span>\n              <strong>E-Mail:</strong> {user.email}\n            </span>\n                        <span>\n              <strong>Username:</strong> {user.username}\n            </span>\n                        <span>\n              <button\n                  type=\"button\"\n                  onClick={this.onSendPasswordResetEmail}\n              >\n                Send Password Reset\n              </button>\n            </span>\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nconst UserList = withFirebase(UserListBase);\nconst UserItem = withFirebase(UserItemBase);\n\nconst condition = authUser =>\n    authUser && authUser.roles.includes(ROLES.ADMIN);\n\nexport default compose(\n    withAuthorization(condition),\n)(AdminPage);"]},"metadata":{},"sourceType":"module"}