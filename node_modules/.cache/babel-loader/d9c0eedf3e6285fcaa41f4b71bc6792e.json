{"ast":null,"code":"import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nconst config = {\n  apiKey: \"AIzaSyDdAwZEPIHGmecudZQ2VGaYKtBRTX0U6aY\",\n  authDomain: \"modulus-e56e4.firebaseapp.com\",\n  databaseURL: \"https://modulus-e56e4.firebaseio.com\",\n  projectId: \"modulus-e56e4\",\n  storageBucket: \"modulus-e56e4.appspot.com\",\n  messagingSenderId: \"768709169703\",\n  appId: \"1:768709169703:web:a38f5dfb315550f831b402\",\n  measurementId: \"G-TX7CYMZJN7\"\n};\n\nclass Firebase {\n  constructor() {\n    this.doCreateUserWithEmailAndPassword = (email, password) => this.auth.createUserWithEmailAndPassword(email, password);\n\n    this.doSignInWithEmailAndPassword = (email, password) => this.auth.signInWithEmailAndPassword(email, password);\n\n    this.doSignOut = () => this.auth.signOut();\n\n    this.doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n\n    this.doPasswordUpdate = password => this.auth.currentUser.updatePassword(password);\n\n    this.onAuthUserListener = (next, fallback) => this.auth.onAuthStateChanged(authUser => {\n      if (authUser) {\n        this.user(authUser.uid).once('value').then(snapshot => {\n          const dbUser = snapshot.val(); // default empty roles\n\n          if (!dbUser.roles) {\n            dbUser.roles = {};\n          } // merge auth and db user\n\n\n          authUser = {\n            uid: authUser.uid,\n            email: authUser.email,\n            ...dbUser\n          };\n          next(authUser);\n        });\n      } else {\n        fallback();\n      }\n    });\n\n    this.user = uid => this.db.ref(`users/${uid}`);\n\n    this.users = () => this.db.ref('users');\n\n    this.course = appID => this.db.ref(`courses/${appID}`);\n\n    this.courses = () => this.db.ref('courses');\n\n    app.initializeApp(config);\n    this.auth = app.auth();\n    this.db = app.database();\n  } // *** Auth API ***\n\n\n}\n\nexport default Firebase;","map":{"version":3,"sources":["/home/danielwei/Development/GitProjects/modulus/src/components/Firebase/firebase.js"],"names":["app","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Firebase","constructor","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","onAuthUserListener","next","fallback","onAuthStateChanged","authUser","user","uid","once","then","snapshot","dbUser","val","roles","db","ref","users","course","appID","courses","initializeApp","database"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,cAAhB;AACA,OAAO,eAAP;AACA,OAAO,mBAAP;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,+BAFD;AAGXC,EAAAA,WAAW,EAAE,sCAHF;AAIXC,EAAAA,SAAS,EAAE,eAJA;AAKXC,EAAAA,aAAa,EAAE,2BALJ;AAMXC,EAAAA,iBAAiB,EAAE,cANR;AAOXC,EAAAA,KAAK,EAAE,2CAPI;AAQXC,EAAAA,aAAa,EAAE;AARJ,CAAf;;AAWA,MAAMC,QAAN,CAAe;AACXC,EAAAA,WAAW,GAAG;AAAA,SAQdC,gCARc,GAQqB,CAACC,KAAD,EAAQC,QAAR,KAC/B,KAAKC,IAAL,CAAUC,8BAAV,CAAyCH,KAAzC,EAAgDC,QAAhD,CATU;;AAAA,SAWdG,4BAXc,GAWiB,CAACJ,KAAD,EAAQC,QAAR,KAC3B,KAAKC,IAAL,CAAUG,0BAAV,CAAqCL,KAArC,EAA4CC,QAA5C,CAZU;;AAAA,SAcdK,SAdc,GAcF,MAAM,KAAKJ,IAAL,CAAUK,OAAV,EAdJ;;AAAA,SAgBdC,eAhBc,GAgBIR,KAAK,IAAI,KAAKE,IAAL,CAAUO,sBAAV,CAAiCT,KAAjC,CAhBb;;AAAA,SAkBdU,gBAlBc,GAkBKT,QAAQ,IACvB,KAAKC,IAAL,CAAUS,WAAV,CAAsBC,cAAtB,CAAqCX,QAArC,CAnBU;;AAAA,SAsBdY,kBAtBc,GAsBO,CAACC,IAAD,EAAOC,QAAP,KACjB,KAAKb,IAAL,CAAUc,kBAAV,CAA6BC,QAAQ,IAAI;AACrC,UAAIA,QAAJ,EAAc;AACV,aAAKC,IAAL,CAAUD,QAAQ,CAACE,GAAnB,EACKC,IADL,CACU,OADV,EAEKC,IAFL,CAEUC,QAAQ,IAAI;AACd,gBAAMC,MAAM,GAAGD,QAAQ,CAACE,GAAT,EAAf,CADc,CAEd;;AACA,cAAI,CAACD,MAAM,CAACE,KAAZ,EAAmB;AACfF,YAAAA,MAAM,CAACE,KAAP,GAAe,EAAf;AACH,WALa,CAMd;;;AACAR,UAAAA,QAAQ,GAAG;AACPE,YAAAA,GAAG,EAAEF,QAAQ,CAACE,GADP;AAEPnB,YAAAA,KAAK,EAAEiB,QAAQ,CAACjB,KAFT;AAGP,eAAGuB;AAHI,WAAX;AAKAT,UAAAA,IAAI,CAACG,QAAD,CAAJ;AACH,SAfL;AAiBH,OAlBD,MAkBO;AACHF,QAAAA,QAAQ;AACX;AACJ,KAtBD,CAvBU;;AAAA,SAgDdG,IAhDc,GAgDPC,GAAG,IAAI,KAAKO,EAAL,CAAQC,GAAR,CAAa,SAAQR,GAAI,EAAzB,CAhDA;;AAAA,SAiDdS,KAjDc,GAiDN,MAAM,KAAKF,EAAL,CAAQC,GAAR,CAAY,OAAZ,CAjDA;;AAAA,SAmDdE,MAnDc,GAmDLC,KAAK,IAAI,KAAKJ,EAAL,CAAQC,GAAR,CAAa,WAAUG,KAAM,EAA7B,CAnDJ;;AAAA,SAoDdC,OApDc,GAoDJ,MAAM,KAAKL,EAAL,CAAQC,GAAR,CAAY,SAAZ,CApDF;;AACVxC,IAAAA,GAAG,CAAC6C,aAAJ,CAAkB5C,MAAlB;AAEA,SAAKc,IAAL,GAAYf,GAAG,CAACe,IAAJ,EAAZ;AACA,SAAKwB,EAAL,GAAUvC,GAAG,CAAC8C,QAAJ,EAAV;AAEH,GAPU,CAQX;;;AARW;;AA4Df,eAAepC,QAAf","sourcesContent":["import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\n\nconst config = {\n    apiKey: \"AIzaSyDdAwZEPIHGmecudZQ2VGaYKtBRTX0U6aY\",\n    authDomain: \"modulus-e56e4.firebaseapp.com\",\n    databaseURL: \"https://modulus-e56e4.firebaseio.com\",\n    projectId: \"modulus-e56e4\",\n    storageBucket: \"modulus-e56e4.appspot.com\",\n    messagingSenderId: \"768709169703\",\n    appId: \"1:768709169703:web:a38f5dfb315550f831b402\",\n    measurementId: \"G-TX7CYMZJN7\"\n};\n\nclass Firebase {\n    constructor() {\n        app.initializeApp(config);\n\n        this.auth = app.auth();\n        this.db = app.database();\n\n    }\n    // *** Auth API ***\n    doCreateUserWithEmailAndPassword = (email, password) =>\n        this.auth.createUserWithEmailAndPassword(email, password);\n\n    doSignInWithEmailAndPassword = (email, password) =>\n        this.auth.signInWithEmailAndPassword(email, password);\n\n    doSignOut = () => this.auth.signOut();\n\n    doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n\n    doPasswordUpdate = password =>\n        this.auth.currentUser.updatePassword(password);\n\n    // *** Merge Auth and DB User API *** //\n    onAuthUserListener = (next, fallback) =>\n        this.auth.onAuthStateChanged(authUser => {\n            if (authUser) {\n                this.user(authUser.uid)\n                    .once('value')\n                    .then(snapshot => {\n                        const dbUser = snapshot.val();\n                        // default empty roles\n                        if (!dbUser.roles) {\n                            dbUser.roles = {};\n                        }\n                        // merge auth and db user\n                        authUser = {\n                            uid: authUser.uid,\n                            email: authUser.email,\n                            ...dbUser,\n                        };\n                        next(authUser);\n                    });\n\n            } else {\n                fallback();\n            }\n        });\n\n    // *** User API ***\n    user = uid => this.db.ref(`users/${uid}`);\n    users = () => this.db.ref('users');\n\n    course = appID => this.db.ref(`courses/${appID}`);\n    courses = () => this.db.ref('courses');\n\n\n}\n\n\n\nexport default Firebase;\n"]},"metadata":{},"sourceType":"module"}